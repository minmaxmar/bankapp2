version: '3.8'

services:
  web:
    depends_on:
      - db
    build: .
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    # command: >
    #   sh -c "go run main.go -b 0.0.0.0"
  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data

  # migrateforce:
  #   container_name: migrateforce
  #   image: migrate/migrate
  #   depends_on:
  #     - db
  #   volumes:
  #     - C:\Users\79170\gopets\bankapp2\migrations:/database
  #   command: [ "-path", "/database", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable", "force", "2" ]
  migrate:
    container_name: migrater
    image: migrate/migrate
    # depends_on:
    #   - migrateforce
    volumes:
      - C:\Users\79170\gopets\bankapp2\migrations:/database
    command: [ "-path", "/database", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable", "up" ]
    # command: >
    #   sh -c "-path /database -database 'postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable' force 2 && 
    #                -path /database -database 'postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable' up"
  


  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper



volumes:
  postgres-db:
