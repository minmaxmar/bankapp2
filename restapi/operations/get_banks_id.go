// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetBanksIDHandlerFunc turns a function with the right signature into a get banks ID handler
type GetBanksIDHandlerFunc func(GetBanksIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBanksIDHandlerFunc) Handle(params GetBanksIDParams) middleware.Responder {
	return fn(params)
}

// GetBanksIDHandler interface for that can handle valid get banks ID params
type GetBanksIDHandler interface {
	Handle(GetBanksIDParams) middleware.Responder
}

// NewGetBanksID creates a new http.Handler for the get banks ID operation
func NewGetBanksID(ctx *middleware.Context, handler GetBanksIDHandler) *GetBanksID {
	return &GetBanksID{Context: ctx, Handler: handler}
}

/*
	GetBanksID swagger:route GET /banks/{id} getBanksId

Get a bank by ID
*/
type GetBanksID struct {
	Context *middleware.Context
	Handler GetBanksIDHandler
}

func (o *GetBanksID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetBanksIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
